<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on QA Tarantula</title><link>https://kalikiana.github.io/qatarantula/post/</link><description>Recent content in Posts on QA Tarantula</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 19 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://kalikiana.github.io/qatarantula/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Container Layer Analyzer</title><link>https://kalikiana.github.io/qatarantula/post/2021-11-19-container-layer-analyzer/</link><pubDate>Fri, 19 Nov 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-11-19-container-layer-analyzer/</guid><description>Today I’d like to point out an amazing new tool: The Container Layer Analyzer, written by Dan Čermák. Dan also wrote a comprehensive blog post about it, which explains it much better than what I do here.</description></item><item><title>Do perspectives matter</title><link>https://kalikiana.github.io/qatarantula/post/2021-11-19-do-perspectives-matter/</link><pubDate>Fri, 19 Nov 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-11-19-do-perspectives-matter/</guid><description/></item><item><title>Clean empty job groups in openQA</title><link>https://kalikiana.github.io/qatarantula/post/2021-11-17-clean-empty-job-groups-in-openqa/</link><pubDate>Wed, 17 Nov 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-11-17-clean-empty-job-groups-in-openqa/</guid><description>In this blog post I present you a small script, which can help you to remove empty job groups from your own openQA instance. This is helpful if you have a development instance with a lot of job groups, that you never use.</description></item><item><title>How to live on containers</title><link>https://kalikiana.github.io/qatarantula/post/2021-09-24-how-to-live-on-containers/</link><pubDate>Fri, 24 Sep 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-09-24-how-to-live-on-containers/</guid><description/></item><item><title>Playing with the openqa API</title><link>https://kalikiana.github.io/qatarantula/post/2021-09-24-playing-with-the-openqa-api/</link><pubDate>Fri, 24 Sep 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-09-24-playing-with-the-openqa-api/</guid><description>Today we are going to play a bit around with the amazing API that every openQA instance provides. The aim of this tutorial is to show how the API can be accessed using a simple language like python.</description></item><item><title>Decent picture in meetings with Anker PowerConf C300</title><link>https://kalikiana.github.io/qatarantula/post/2021-09-21-decent-picture-in-meetings-with-anker-powerconf-c300/</link><pubDate>Tue, 21 Sep 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-09-21-decent-picture-in-meetings-with-anker-powerconf-c300/</guid><description/></item><item><title>Looking after your flatpaks</title><link>https://kalikiana.github.io/qatarantula/post/2021-09-18-looking-after-your-flatpaks/</link><pubDate>Sat, 18 Sep 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-09-18-looking-after-your-flatpaks/</guid><description/></item><item><title>How to help test-drive zypper</title><link>https://kalikiana.github.io/qatarantula/post/2021-08-31-how-to-help-test-drive-zypper/</link><pubDate>Tue, 31 Aug 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-08-31-how-to-help-test-drive-zypper/</guid><description/></item><item><title>How to aggregate your blogs with the world crab</title><link>https://kalikiana.github.io/qatarantula/post/2021-08-26-how-to-aggregate-your-blogs-with-the-world-crab/</link><pubDate>Thu, 26 Aug 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-08-26-how-to-aggregate-your-blogs-with-the-world-crab/</guid><description/></item><item><title>openqa-cli Cheatsheet</title><link>https://kalikiana.github.io/qatarantula/post/2021-08-20-openqa-cli-cheatsheet/</link><pubDate>Fri, 20 Aug 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-08-20-openqa-cli-cheatsheet/</guid><description>Checkout the new openqa-cli cheat sheet page where I start to collect some useful “how do I do …” snippets for the openQA CLI utility openqa-cli.</description></item><item><title>openqa-cli cheat sheet</title><link>https://kalikiana.github.io/qatarantula/post/2021-08-19-openqa-cli-cheat-sheet/</link><pubDate>Thu, 19 Aug 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-08-19-openqa-cli-cheat-sheet/</guid><description>openqa-cli is a command-line utility for interacting with openQA. The tool is versatile and allows you to control and interact with an arbitrary openQA instance from the comfort of your command line.</description></item><item><title>Use local go modules</title><link>https://kalikiana.github.io/qatarantula/post/2021-08-13-use-local-go-modules/</link><pubDate>Fri, 13 Aug 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-08-13-use-local-go-modules/</guid><description>When dealing with go modules, sometimes it’s handy to test some changes from a local repository instead of using the upstream one. Now, go programs are typically relying only on the upstream packages.</description></item><item><title>pasta - stupid simple pastebin service</title><link>https://kalikiana.github.io/qatarantula/post/2021-07-16-pasta-stupid-simple-pastebin-service/</link><pubDate>Fri, 16 Jul 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-07-16-pasta-stupid-simple-pastebin-service/</guid><description>pasta is a stupid simple pastebin service for self-hosting. I started this project months ago because I was missing an easy, simple and no pain self-hosting solution.</description></item><item><title>Writing openQA tests in Python</title><link>https://kalikiana.github.io/qatarantula/post/2021-07-15-writing-openqa-tests-in-python/</link><pubDate>Thu, 15 Jul 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-07-15-writing-openqa-tests-in-python/</guid><description/></item><item><title>Hidden gem - Show failures only in external results</title><link>https://kalikiana.github.io/qatarantula/post/2021-05-12-hidden-gem-show-failures-only-in-external-results/</link><pubDate>Wed, 12 May 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-05-12-hidden-gem-show-failures-only-in-external-results/</guid><description>I just recently discovered one of the hidden gems in the openQA WebUI: Show only failing tests in external results. Problem / User story Certain tests like ltp perform a series of tests within a test run and show the results as “External results”.</description></item><item><title>Setting up a new Rust project</title><link>https://kalikiana.github.io/qatarantula/post/2021-05-07-setting-up-a-new-rust-project/</link><pubDate>Fri, 07 May 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-05-07-setting-up-a-new-rust-project/</guid><description/></item><item><title>Working with openQA via the command line</title><link>https://kalikiana.github.io/qatarantula/post/2021-04-27-working-with-openqa-via-the-command-line/</link><pubDate>Tue, 27 Apr 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-04-27-working-with-openqa-via-the-command-line/</guid><description/></item><item><title>Hide IDE folders in git using a global gitignore</title><link>https://kalikiana.github.io/qatarantula/post/2021-04-23-hide-ide-folders-in-git-using-a-global-gitignore/</link><pubDate>Fri, 23 Apr 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-04-23-hide-ide-folders-in-git-using-a-global-gitignore/</guid><description>Integrated development environemnts (IDE) are using their own folders withing your code repositories to store their settings. This can become annoying when working on a git repository and they keep popping up as untracked files:</description></item><item><title>Related links</title><link>https://kalikiana.github.io/qatarantula/post/2021-04-21-related-links/</link><pubDate>Wed, 21 Apr 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-04-21-related-links/</guid><description>Checkout the following related blogs of some of my friends. Blogs are listed in no particular order Timo’s openSUSE Posts Cris' blog Zoltán’s Blog (do I have the accent right?</description></item><item><title>Working out of and in your homeoffice</title><link>https://kalikiana.github.io/qatarantula/post/2021-04-20-working-out-of-and-in-your-homeoffice/</link><pubDate>Tue, 20 Apr 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-04-20-working-out-of-and-in-your-homeoffice/</guid><description>Homeoffice is awesome for so many reasons I’ve worked remotely for more than a decade. Actually all of my software development career has been one where going to the office was the exception. Something I do occasionally to meet some of my colleagues. Actually when I see my colleagues it’s more typically at software conferences rather than company headquearters. Benefits that come with homeoffice are numerous: On paper I’ve got a 9-5 job I don’t need to move to do my job1 I can adjust to the demands of my personal life I can adjust to make my colleague’s life easier Drawbacks that come with homeoffice are numerous:</description></item><item><title>How to be inclusive and embrace diversity</title><link>https://kalikiana.github.io/qatarantula/post/2021-04-15-how-to-be-inclusive-and-embrace-diversity/</link><pubDate>Thu, 15 Apr 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-04-15-how-to-be-inclusive-and-embrace-diversity/</guid><description>Do you like vanilla ice cream like everyone else? Think of ice cream for a moment. Do you like chocolate? Do you like vanilla? Nobody can tell from looking at you what kind of flavor you like. People might assume that you like vanilla like everyone else. But maybe you don’t like vanilla ice cream? What if you prefer strawberry? What if you don’t like ice cream at all and everyone is having ice cream?</description></item><item><title>Dipping my toes into Rust</title><link>https://kalikiana.github.io/qatarantula/post/2021-04-09-dipping-my-toes-into-rust/</link><pubDate>Fri, 09 Apr 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-04-09-dipping-my-toes-into-rust/</guid><description>What is Rust and why would I wanna learn it? Rust is a relatively new language, conceived 2010 which makes it a good 10 years old. Poised as a memory-safe alternative to C++ with no runtime overhead, there’s no garbage collection unlike Go or Python and ownership is predicted at compile-time by default. The biggest downside I was prepared for is one of the steepest learning curves for a newcomer to a programming language.</description></item><item><title>IPMI remote access on old machines</title><link>https://kalikiana.github.io/qatarantula/post/2021-04-07-ipmi-remote-access-on-old-machines/</link><pubDate>Wed, 07 Apr 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-04-07-ipmi-remote-access-on-old-machines/</guid><description>This is a very short update post about getting the IPMI Remote Control Java Applet from horrible old system running on modern systems. This is an issue that haunted me for some time.</description></item><item><title>about openQA-bites</title><link>https://kalikiana.github.io/qatarantula/post/2021-02-25-about-openqa-bites/</link><pubDate>Thu, 25 Feb 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-02-25-about-openqa-bites/</guid><description>openQA bites is a blog about tutorials, insights and love stories from a simple openQA developer. It aims to provide small and bite-sized posts about typical usage issues that every openQA dev encounters and atypical corner-cases that are worth to be written down.</description></item><item><title>Active monitoring of openQA jobs</title><link>https://kalikiana.github.io/qatarantula/post/2021-02-25-active-monitoring-of-openqa-jobs/</link><pubDate>Thu, 25 Feb 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-02-25-active-monitoring-of-openqa-jobs/</guid><description>openqa-mon is a little command-line utility to monitor one or multiple openQA jobs for their status. This tool is useful if you want to live monitor a handful of jobs closely e.</description></item><item><title>Getting a new Perl module into openSUSE</title><link>https://kalikiana.github.io/qatarantula/post/2021-02-24-getting-a-new-perl-module-into-opensuse/</link><pubDate>Wed, 24 Feb 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-02-24-getting-a-new-perl-module-into-opensuse/</guid><description>There is this Perl module on CPAN that looks really handy So, I want to use Devel::Cover::Report::Codecovbash which is a Perl module. To test out how it works of course I can simply install it off CPAN: cpanm -nq &amp;lsquo;Devel::Cover::Report::Codecovbash&amp;rsquo; I can use it just fine like this. To be sure, installing modules as a user $PERL5LIB needs to be set accordingly. Say I spent some time trying this out and decided that I want to depend on this package.</description></item><item><title>Developing in Toolbox containers</title><link>https://kalikiana.github.io/qatarantula/post/2021-02-19-developing-in-toolbox-containers/</link><pubDate>Fri, 19 Feb 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-02-19-developing-in-toolbox-containers/</guid><description>The mess that is a development setup You might be running something like openSUSE Tumbleweed, Leap or MicroOS for your day to day development. Traditionally the workflow involves installing all sorts of tools you might need, enabling fun development repos like devel-perl or app-specific repos and tweaking the system configuration to your liking. Sooner or later you will learn about the existence of &amp;ndash;allow-vendor-change and how priorities work. And as you wonder how to avoid breaking your system with conflicting packages somebody drops the containers buzzword on you!</description></item><item><title>Get started with openQA development</title><link>https://kalikiana.github.io/qatarantula/post/2021-02-16-get-started-with-openqa-development/</link><pubDate>Tue, 16 Feb 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-02-16-get-started-with-openqa-development/</guid><description>I want to develop openQA openQA is a framework to run system-level tests that is used for openSUSE, Fedora and others in a way that uses a serial console or mouse and keyboard input to interact with tests. No support from the software toolkit used is required to make this work. For the purposes of this article I’m going to assume you have a basic idea about openQA. So what do I need to get going?</description></item><item><title>Setup a blog with GitLab Pages and Hugo</title><link>https://kalikiana.github.io/qatarantula/post/2021-02-12-setup-a-blog-with-gitlab-pages-and-hugo/</link><pubDate>Fri, 12 Feb 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-02-12-setup-a-blog-with-gitlab-pages-and-hugo/</guid><description>Blogging the lazy way Note: This little guide is focussing on GitLab, you can also setup a blog with GitHub Pages if that’s your preference. Allow me to introduce you to GitLab Pages. In short, you get a free git repo here with support for Hugo which is a static website generator based on Markdown. And the end result will show up on username.gitlab.io without your having to worry about domains or hosting.</description></item><item><title>Setup OBS Studio to record a video call</title><link>https://kalikiana.github.io/qatarantula/post/2021-02-10-setup-obs-studio-to-record-a-video-call/</link><pubDate>Wed, 10 Feb 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-02-10-setup-obs-studio-to-record-a-video-call/</guid><description>Let’s preserve that precious knowledge Virtual workshops are a thing. And because they are virtual, it’s easy to make a recording that you can share with everyone interested. Or maybe you’re organizing a video call and some of those beautiful people can’t make it. Let’s see how to do this with no prior knowledge. Get OBS Studio up and running flatpak install com.obsproject.Studio Since I like to keep my base system as lean as possible I’m quite happy to use the flatpak here.</description></item><item><title>What are Needles</title><link>https://kalikiana.github.io/qatarantula/post/2021-02-10-what-are-needles/</link><pubDate>Wed, 10 Feb 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-02-10-what-are-needles/</guid><description>In this blog post we are going to give you the easiest introduction to what needles are and how you can use them. While there are many good talks and documentation on needles out there, it took me longer than it should have to find a easy-to-use and easy-to-understand introduction into this topic alone.</description></item><item><title>Background bash commands</title><link>https://kalikiana.github.io/qatarantula/post/2021-02-04-background-bash-commands/</link><pubDate>Thu, 04 Feb 2021 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/2021-02-04-background-bash-commands/</guid><description>This post describes the caveats and correct handling of the bash background operator within openQA.</description></item><item><title>About Cris</title><link>https://kalikiana.github.io/qatarantula/post/0001-01-01-about-cris/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/0001-01-01-about-cris/</guid><description>Free software enthusiast, big on tea, fresh fruit and nuts. Looking back Press some of my (social) buttons to find out more. Imprint</description></item><item><title>Imprint</title><link>https://kalikiana.github.io/qatarantula/post/0001-01-01-imprint/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kalikiana.github.io/qatarantula/post/0001-01-01-imprint/</guid><description>Legal notices to conform with Germany law despite the lack of commercial interests and monetizable content. Ambiguous phrasing may require conformity nevertheless. Angaben gemäß § 5 TMG Cris Dywan Wesendonckstr. 10 53115 Bonn 0228 240 46847 kontakt at twotoasts de Verantwortlich für den Inhalt nach § 55 Abs. 2 RStV Cris Dywan Wesendonckstr. 10 53115 Bonn GDPR This website is statically generated. No user data is being stored or evaluated.</description></item></channel></rss>